@inherits LayoutComponentBase

<MudThemeProvider @ref="_mudThemeProvider" @bind-IsDarkMode="_isdarkmode" Theme="Configuration.Theme"/>
<MudSnackbarProvider/>
<MudDialogProvider/>

<AuthorizeView>
    <Authorized>
        <MudLayout>
            <MudAppBar>
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="ToggleDreawer"/>
                Dima
                <MudSpacer/>
                <MudButton Href="/lancamentos/novo" Variant="Variant.Text" StartIcon="@Icons.TwoTone.Add">NOVO LANÇAMENTO</MudButton>
                <MudSpacer/>
                <MudText Typo="Typo.caption">
                    @context.User.Identity?.Name
                </MudText>
                <MudSwitch  Color="Color.Inherit" @bind-Value="@_isdarkmode" t="bool" Class="ma-4" ThumbIcon="@Icons.TwoTone.Lightbulb" />
            </MudAppBar>
            <MudDrawer @bind-Open="@_isDrawerOpened">
                <NaveMenu />
            </MudDrawer>
            <MudMainContent>
                <MudContainer>
                    @Body
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </Authorized>
    <NotAuthorized>
        <LoginRedirect/>
    </NotAuthorized>
</AuthorizeView>

@code
{
    private bool _isDrawerOpened = true;
    private bool _isdarkmode = true;
    private MudThemeProvider _mudThemeProvider = null!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isdarkmode = await _mudThemeProvider.GetSystemPreference();
            await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChanged);
            StateHasChanged();
            
        }
    }

    private Task OnSystemPreferenceChanged(bool newValue)
    {
        _isdarkmode = newValue;
        StateHasChanged();
        return Task.CompletedTask;
    }

    private void ToggleDreawer()
    {
        _isDrawerOpened = !_isDrawerOpened;
    }
}
